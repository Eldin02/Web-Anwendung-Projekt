let canvas = document.getElementById('canvas');
        let ctx = canvas.getContext('2d');
        let rows = 20; //größe der schlange 
        let cols = 20;
        let snake = [{ x: 19, y: 3} // wo die schlange spawnt
            ];
        let food;
        let cellWidth = canvas.width / cols;
        let cellHeight = canvas.height / rows;
        let direction = 'LEFT';
        let gegessen = false; 


        essenplatzieren();
        setInterval(gameLoop,250); //interval für die gameloop funktion in millisekunden
        document.addEventListener('keydown', keyDown);


        draw();
        

        function draw() {
            ctx.fillStyle= 'black'; //farbe des spielfelds 
            ctx.fillRect(0,0,canvas.width,canvas.height );
            ctx.fillStyle = 'white'; //farbe der schlange

            snake.forEach(part => add(part.x,part.y));
            
          

            ctx.fillStyle = src = 'snake.jpg'; //farbe des essens 
            add(food.x,food.y); //Essen
            requestAnimationFrame(draw); 

        }
        function testSpielvorbei()  {
            //1.schlange läuft gegen die Wand 
            let firstPart = snake[0];
             let otherParts = snake.slice( 1);
             let duplicatePart= otherParts.find(part => part.x == firstPart.x && part.y == firstPart.y )
            if(snake[0].x < 0 ||
            snake[0].x > cols -1 ||
            snake[0].y < 0 ||
            snake[0].y > rows -1  ||
            duplicatePart )
            {
                essenplatzieren();
                snake = [{x: 19, y: 3}];
                direction = 'LEFT';

         }
        }
        function essenplatzieren() { //platziert das essen über mathrandom, mathfloor rundet ab
            let randomX = Math.floor(Math.random() * cols); 
            let randomY = Math.floor(Math.random() * rows);
            food = {x: randomX, y: randomY };
        }
        function add (x,y) {
        ctx.fillRect(x * cellWidth,y* cellHeight, cellWidth-1,cellHeight-1);
        }

        function shiftSnake() {
            for (let i = snake.length - 1; i > 0; i--) {
                const part = snake [i];
                const lastPart = snake[i - 1]; 
                part.x = lastPart.x; 
                part.y = lastPart.y; 
              
            }
        }

        function gameLoop() { //zieht Werte ab oder fügt Werte in der Koordiante hinzu, sie wird regelmäsig ausgeführt
             testSpielvorbei();
             

            if(gegessen) { //neues array wird hinzugefügt 
                snake = [{x: snake[0].x, y: snake[0].y},  ...snake]; //...wird der restliche Array wert hinzugefügt
                gegessen = false; 
            } 
            shiftSnake();



            if(direction == 'LEFT'){ //wie sich die schlange bewegt und kooridnaten werden entweder hinzugefügt oder abgezogen 
                snake[0].x--; 
            }
            if(direction == 'RIGHT'){
                snake[0].x++;
            }
            if(direction == 'UP'){
                snake[0].y--;
            }
            if(direction == 'DOWN'){
                snake[0].y++;
            }

            if(snake[0].x == food.x && snake[0].y == food.y) {
                //Futter einsammeln 
                gegessen = true; 

                //Futter wird neu platziert wenn koordianten von der schlange dem des futters entspricht  
                essenplatzieren();  
            }
        

            

        }
        function keyDown(e){ //keycodes für die Pfeiltasten (wie sich die Schlange bewegt)
            if(e.keyCode == 37) {
                direction = 'LEFT';
            }
            if(e.keyCode == 38) {
                direction = 'UP';
            }
            if(e.keyCode == 39) {
                direction = 'RIGHT';
            }
            if(e.keyCode == 40) {
                direction = 'DOWN';
            }
        }
        
